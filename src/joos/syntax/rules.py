from joos.syntax import *

rules_map = {
    # abstract ### ordered the same way as in abstract.py
    'CompilationUnit': CompilationUnit,
    'PackageDeclaration': PackageDecl,
    'ImportDeclaration': ImportDecl,
    'TypeDeclaration': TypeDecl,
    'ClassDeclaration': ClassDecl,
    'MethodDeclaration': MethodDecl,
    'MethodHeader': MethodHeader,
    'InterfaceDeclaration': InterfaceDecl,
    'FieldDeclaration': FieldDecl,
    'ConstructorDeclaration': ConstructorDecl,
    'VariableDeclarator': VariableDecl,
    'FormalParameter': Parameter,
    'Type': Type,
    'PrimitiveType': PrimitiveType,
    'Name': Name,
    'MethodInvocation': MethodInvocation,
    'Block': Block,

    # statement
    'BlockStatement': BlockStatement,
    'Statement': Statement,
    'StatementNoShortIf': Statement,
    'StatementWithoutTrailingSubstatement':
        StatementWithoutTrailingSubstatement,
    'IfThenStatement': IfThenStatement,
    'IfThenElseStatement': IfThenElseStatement,
    'IfThenElseStatementNoShortIf': IfThenElseStatement,
    'WhileStatement': WhileStatement,
    'WhileStatementNoShortIf': WhileStatement,
    'ForStatement': ForStatement,
    'ForStatementNoShortIf': ForStatement,
    'LocalVariableDeclarationStatement': LocalVarDecl,
    'LocalVariableDeclaration': LocalVarDecl,

    # expression
    'Expression': Expression,
    'Assignment': Assignment,
    'ConditionalOrExpression': ConditionalOrExpression,
    'ConditionalAndExpression': ConditionalAndExpression,
    'InclusiveOrExpression': InclusiveOrExpression,
    'AndExpression': AndExpression,
    'EqualityExpression': EqualityExpression,
    'RelationalExpression': RelationalExpression,
    'AdditiveExpression': AdditiveExpression,
    'MultiplicativeExpression': MultiplicativeExpression,
    'UnaryExpression': UnaryExpression,
    'UnaryExpressionNotPlusMinus': UnaryExpressionNotPlusMinus,
    'CastExpression': CastExpression,
    'StatementExpression': StatementExpression,
    'FieldAccess': FieldAccess,
    'ArrayAccess': ArrayAccess,
    'Primary': Primary,
    'PrimaryNoNewArray': PrimaryNoNewArray,
    'ReferenceType': ReferenceType,
    'ArrayType': ArrayType,
    'ArrayCreationExpression': ArrayCreationExpression,
    'Literal': Literal,
    '2147483648': Literal,
    'ClassInstanceCreationExpression': ClassInstanceCreationExpression,
}
